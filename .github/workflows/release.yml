name: Release

on:
  push:
    tags:
      - 'v1.*.*'
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-package:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          # macOS targets
          - x86_64-apple-darwin     # Intel Mac (10.7+)
          - aarch64-apple-darwin    # Apple Silicon (11.0+, M1/M2/M3)

    permissions:
      contents: read
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      
      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target }} --verbose
      
      - name: Package binary for ${{ matrix.target }}
        run: |
          mkdir -p dist/${{ matrix.target }}
          
          # Copy only the binary to distribution directory
          BIN_NAME=swizzy
          cp target/${{ matrix.target }}/release/$BIN_NAME dist/${{ matrix.target }}/
          
          # Create archive
          cd dist && tar -czf ${{ matrix.target }}.tar.gz ${{ matrix.target }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: dist/${{ matrix.target }}.tar.gz

  # Create GitHub release with all artifacts
  create-release:
    needs: build-and-package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
