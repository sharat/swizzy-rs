name: Release

on:
  push:
    tags:
      - 'v1.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build and Upload Binaries
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Install Cross (for non-macOS targets)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
          rustup target add ${{ matrix.target }}

      - name: Build Binary
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Prepare Binary for Release
        run: |
          binary_name=$(basename $(find target/${{ matrix.target }}/release -maxdepth 1 -perm -111 -type f))
          mkdir -p release
          cp target/${{ matrix.target }}/release/$binary_name release/
          tar -czvf $binary_name-${{ matrix.target }}.tar.gz -C release $binary_name
          echo "ASSET_NAME=$binary_name-${{ matrix.target }}.tar.gz" >> $GITHUB_ENV

      - name: Upload Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ env.ASSET_NAME }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/gzip

  publish:
    name: Publish to GitHub Packages
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to GitHub Packages
        run: echo ${{ secrets.GITHUB_TOKEN }} | cargo login

      - name: Publish Package
        run: cargo publish --token ${{ secrets.GITHUB_TOKEN }}
